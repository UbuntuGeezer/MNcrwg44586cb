&apos;// GenHLinkM.bas
&apos;//---------------------------------------------------------------
&apos;// GenHLinkM - Generate hyperlink(s) for selected range.
&apos;//		8/16/20.	wmk.	14:00
&apos;//---------------------------------------------------------------

public sub GenHLinkM()

&apos;//	Usage.	macro call or
&apos;//			call GenHLinkM()
&apos;//
&apos;//
&apos;// Entry.	user has selected a range of cells in desired row(s) to
&apos;//			extract the address field from the COL_ADDR column index
&apos;//			and create a hyperlink to look up phone/address information
&apos;//
&apos;//	Exit.	each row selected has a hperlink added in the COL_HLINK
&apos;//			column in the form:
&apos;//			HYPERLINK(&quot;&lt;url&gt;&quot;) that will allow the end-user to click
&apos;//			on the hyperlink url and be taken to a search webpage
&apos;//
&apos;// Calls.	sGenPhoneURL, sGen411URL
&apos;//
&apos;//	Modification history.
&apos;//	---------------------
&apos;//	8/11/20.	wmk.	original code; adapted from InsRowM.bas
&apos;// 8/13/20.	wmk.	call to sGen411URL added for 411.com lookup;
&apos;//						&quot;=&quot; added in front and &quot;Click here to search&quot;
&apos;//						added to cell
&apos;// 8/16/20.	wmk.	call to sGenWhtPgesURL added for whitepages.com
&apos;//						lookup; constants moved to module header
&apos;//
&apos;//	Notes. The curreht sGenPhoneURL only generates links to the
&apos;// truepeoplesearch.com website. It could possible be expanded in the
&apos;//	future to be able to use.
&apos;// Wishlist. Pick up COL_ADDR and COL_HLINK from predetermined cells
&apos;// in the oRange.Sheet.
&apos;//	Method. for each row, extract address field from COL_ADDR
&apos;//		use sGenPhoneURL to generate url from address
&apos;//     add HYPERLINK(&quot;&lt;url&gt;&quot;) to create hyperlink
&apos;//		store hyperlink in row at COL_HLINK

&apos;//	constants.
&apos;// see Module header...
&apos;const COL_ADDR=1		&apos;// column index for extracting address
&apos;const COL_HLINK=4		&apos;// column for truepeople hyperlink
&apos;const COL_HLINK1=5		&apos;// column for 411 hyperlink
&apos;const COL_CITY=1		&apos;// column index for city
&apos;const ROW_CITY=2		&apos;// row index for city -B3

&apos;// cell formatting constants.
&apos;const LJUST=1		&apos;// left-justify HoriJustify
&apos;const CJUST=2		&apos;// center HoriJustify
&apos;const RJUST=0		&apos;// right-justify HoriJustify
&apos;const YELLOW=16776960		&apos;// decimal value of YELLOW color
&apos;const TXT_HLINK=&quot;HYPERLINK(&quot;&quot;&quot;	&apos;// HYPERLINK prefix

&apos;//	local variables.
Dim oDoc As Object
Dim oSheet As Object
Dim NewColumn As Object
dim oSel as Object
dim iSheetIx as integer
dim oRange as Object
dim lThisRow as long		&apos;// current row selected on sheet

&apos;// processing variables.
dim nRowsProcessed	 As Integer	&apos;// count of rows processed
dim nRowCount		As Integer	&apos;// # rows to process
dim sAddress As String		&apos;// address field from current row
dim sURL	As String		&apos;// url generated from sAddress
dim sHLink	As String		&apos;// HYPERTEXT link to store
dim i		As Integer		&apos;// loop counter

&apos;// XCell sheet objects
dim oCellAddr as object		&apos;// address field
dim oCellHLink as object	&apos;// hyperlink field
dim oCity 	As object		&apos;// city for sheet
dim sCity	As String		&apos;// city from sheet

	&apos;// code.
	ON ERROR GOTO ErrorHandler
	oDoc = ThisComponent
	oSel = oDoc.getCurrentSelection()
	oRange = oSel.RangeAddress
	iSheetIx = oRange.Sheet
	oSheet = oDoc.Sheets(iSheetIx)
	
	&apos;// extract city applying to sheet
	oCity = oSheet.getCellByPosition(COL_CITY, ROW_CITY)
	sCity = trim(oCity.String)
	if len(sCity) = 0 then
		sCity = &quot;Venice&quot;
	endif
	nRowsProcessed = 0		&apos;// clear processed count

	&apos;// set row processing from oRange information
	lThisRow = oRange.StartRow - 1		&apos;// start at -1 since increment first
	nRowCount = oRange.EndRow - lThisRow	&apos;// set row count to process
	for i = 1 to nRowCount
		lThisRow = lThisRow + 1		&apos;// advance current row
		oCellAddr = oSheet.getCellByPosition(COL_ADDR, lThisRow)
		oCellHLink = oSheet.getCellByPosition(COL_HLINK, lThisRow)
		sAddress = trim(oCellAddr.String)		&apos;// set cell address text
		if len(sAddress) = 0 then
			msgBox(&quot;GenHLinkM - empty address field; halting process.&quot;)
			oCellAddr.CellBackColor = YELLOW
			exit for
		endif	&apos;// null string - alert user, mark row and bail

		&apos;// see what piece of oCellHLink contains HYPERLINK.. maybe function?
&apos;XRay oCellHLink
&apos;sLink = oCellHLink.String
&apos;msgbox(&quot;HLink cell .String = &apos;&quot; + sLink + &quot;&apos;&quot;
&apos;sLink = oCellHLink.getFormula()
&apos;msgbox(&quot;HLink cell .Formula = &apos;&quot; + sLink + &quot;&apos;&quot;
&apos;sLink = oCellHLink.Hyperlink
&apos;msgbox(&quot;HLink cell .Hyperlink = &apos;&quot; + sLink + &quot;&apos;&quot;
&apos;        if true then
&apos;        if false then
&apos;           GoTo Nextfor
&apos;        endif

		&apos;// Generate truepeople.. URL
		sURL = sGenPhoneURL(sAddress, sCity)
		sHLink = &quot;=&quot;+TXT_HLINK + sURL + CHR(34)+&quot;;&quot;+CHR(34) _
	 + &quot;Click here to search&quot; + CHR(34) + &quot;)&quot;
&apos;msgbox(&quot;Double quote = &quot; + ASC(&quot;&quot;&quot;&quot;) )
&apos;msgbox(&quot;Generated URL =&quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;&apos;&quot; + sURL + &quot;&apos;&quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;Generated Hypertext link = &quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;&apos;&quot; + sHLink )
&apos;		oCellHLink.String = sHLink
		oCellHLink.setFormula(sHLink)
		
		&apos;// Generate 411.. URL
		sURL = sGen411URL(sAddress, sCity)
		sHLink = &quot;=&quot;+TXT_HLINK + sURL + CHR(34)+&quot;;&quot;+CHR(34) _
	 + &quot;Click here to search&quot; + CHR(34) + &quot;)&quot;
&apos;msgbox(&quot;Generated URL =&quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;&apos;&quot; + sURL + &quot;&apos;&quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;Generated Hypertext link = &quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;&apos;&quot; + sHLink )
		oCellHLink = oSheet.getCellByPosition(COL_HLINK1, lThisRow)
		oCellHLink.setFormula(sHLink)

		&apos;// Generate whitepages.. URL
		sURL = sGenWhtPgesURL(sAddress, sCity)
		sHLink = &quot;=&quot;+TXT_HLINK + sURL + CHR(34)+&quot;;&quot;+CHR(34) _
	 + &quot;Click here to search&quot; + CHR(34) + &quot;)&quot;
&apos;msgbox(&quot;Generated URL =&quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;&apos;&quot; + sURL + &quot;&apos;&quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;Generated Hypertext link = &quot; + CHR(13) + CHR(10) _
&apos;		+ &quot;&apos;&quot; + sHLink )
		oCellHLink = oSheet.getCellByPosition(COL_HLINK2, lThisRow)
		oCellHLink.setFormula(sHLink)
		
Nextfor:
		nRowsProcessed = nRowsProcessed + 1

	next i
	
	msgbox(&quot;GenHLinkM - &quot; + nRowsProcessed + &quot; rows processed&quot;)
	
NormalExit:
	exit sub
	
ErrorHandler:
   msgbox(&quot;GenHLinkM - unprocessed error.&quot;)
   GoTo NormalExit

end sub		&apos;// end GenHLinkM	8/16/20.
