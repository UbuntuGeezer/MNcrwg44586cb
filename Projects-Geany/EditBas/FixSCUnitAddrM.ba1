&apos;// FixSCUnitAddrM.bas
&apos;//-----------------------------------------------------
&apos;// FixSCUnitAddrM - Fix UnitAddress fields by stripping unit token.
&apos;//		9/22/20.	wmk.	12:00
&apos;//---------------------------------------------------------------------

public sub FixSCUnitAddrM()

&apos;//	Usage.	macro call or
&apos;//			call FixSCUnitAddrM()
&apos;//
&apos;// Entry.	Admin-SCEdit formatted sheet is active; user has selected a
&apos;//			range of cells in desired row(s) to
&apos;//			extract the address field from the COL_ADDR column index
&apos;//			strip the unit field, if present, and rewrite
&apos;//
&apos;//	Exit.	each row selected has its UnitAddress field modified to
&apos;//			have no unit #; the unit# information is in the SitusAddress
&apos;//			field at the end of each record
&apos;//
&apos;// Calls.	fsStripSCUnit
&apos;//
&apos;//	Modification history.
&apos;//	---------------------
&apos;//	9/22/20.	wmk.	original code; adapted from GenELinkM
&apos;//
&apos;//	Notes. FixSCUnitAddrM accommodates Bridge data extracted using
&apos;// SQL on an SCPA download full/partial database, then placed in a
&apos;// Bridge spreadsheet from the query .csv file.
&apos;// The import goes through several phases.
&apos;//	The 1st phase is to an Admin-Bridge spreadsheet by taking the
&apos;//	query data and running the SCBridgeToBridge utility on it.
&apos;//
&apos;// The 2nd phase is, using the Admin-Bridge sheet, an Admin-SCEdit sheet
&apos;// is generated that is simplified for data entry/checking. The Admin-SCEdit
&apos;// sheet contains the hyperlinks to search truepeople, 411, and whitepages.
&apos;// GenELinkM is used to place the hyperlinks in the Admin-SCEdit sheet, but
&apos;// before GenELinkM can generate proper links, the unit#s need to be removed
&apos;// from the SC Bridge UnitAddress fields. The original unit information is
&apos;// still preserved in the SitusAddress field near the end of each record.
&apos;//
&apos;//	If there is newer information in the searches, the address records can be
&apos;// edited to either add/change names/phone numbers.
&apos;//
&apos;// The 3rd phase is the Pub-Territory sheet that is generated to go out
&apos;// as a territory sheet to the territory servant and, eventually to the
&apos;// publisher who checks out the territory.
&apos;//
&apos;//	Method. for each row, extract address field from COL_FULLADDR
&apos;//		run the .String of the field through fsStripSCUnit
&apos;//		replace the .String of the field with the stripped address

&apos;//	constants.
const COL_CITY=1
const ROW_CITY=2

&apos;//	constants.
const COL_UNITADDR=1		&apos;// full address from TerrProps/SplitProps UnitAddress
const YELLOW=16776960		&apos;// decimal value of YELLOW color

&apos;// cell formatting constants.
&apos;const LJUST=1		&apos;// left-justify HoriJustify
&apos;const CJUST=2		&apos;// center HoriJustify
&apos;const RJUST=0		&apos;// right-justify HoriJustify
&apos;const YELLOW=16776960		&apos;// decimal value of YELLOW color
&apos;const TXT_HLINK=&quot;HYPERLINK(&quot;&quot;&quot;	&apos;// HYPERLINK prefix

&apos;//	local variables.
Dim oDoc As Object
Dim oSheet As Object
Dim NewColumn As Object
dim oSel as Object
dim iSheetIx as integer
dim oRange as Object
dim lThisRow as long		&apos;// current row selected on sheet

&apos;// processing variables.
dim nRowsProcessed As Integer	&apos;// count of rows processed
dim nRowCount		As Integer	&apos;// # rows to process
dim sAddress As String		&apos;// address field from current row
dim sURL	As String		&apos;// url generated from sAddress
dim sHLink	As String		&apos;// HYPERTEXT link to store
dim i		As Integer		&apos;// loop counter

&apos;// XCell sheet objects
dim oCellAddr as object		&apos;// address field
dim oCellHLink as object	&apos;// hyperlink field
dim oCity 	As object		&apos;// city for sheet
dim sCity	As String		&apos;// city from sheet

	&apos;// code.
	ON ERROR GOTO ErrorHandler
	oDoc = ThisComponent
	oSel = oDoc.getCurrentSelection()
	oRange = oSel.RangeAddress
	iSheetIx = oRange.Sheet
	oSheet = oDoc.Sheets(iSheetIx)
	
	&apos;// extract city applying to sheet
	oCity = oSheet.getCellByPosition(COL_CITY, ROW_CITY)
	sCity = trim(oCity.String)
	if len(sCity) = 0 then
		sCity = &quot;Venice&quot;
	endif
	nRowsProcessed = 0		&apos;// clear processed count

	&apos;// set row processing from oRange information
	lThisRow = oRange.StartRow - 1		&apos;// start at -1 since increment first
	nRowCount = oRange.EndRow - lThisRow	&apos;// set row count to process
	for i = 1 to nRowCount
		lThisRow = lThisRow + 1		&apos;// advance current row
		oCellAddr = oSheet.getCellByPosition(COL_UNITADDR, lThisRow)
		sAddress = trim(oCellAddr.String)		&apos;// set cell address text
		if len(sAddress) = 0 then
			msgBox(&quot;FixSCUnitAddrM  - empty address field; skipping..&quot;) &apos;//
			oCellAddr.CellBackColor = YELLOW
			GoTo Nextfor
		endif	&apos;// null string - alert user, mark row and bail

		&apos;// strip unit from address field and replace
		sAddress = fsStripSCUnit(sAddress)
		oCellAddr.String = sAddress
Nextfor:
		nRowsProcessed = nRowsProcessed + 1

	next i
	
&apos;	msgbox(&quot;FixSCUnitAddrM  - &quot; + nRowsProcessed + &quot; rows processed&quot;)
		
NormalExit:
	exit sub
	
ErrorHandler:
   msgbox(&quot;FixSCUnitAddrM  - unprocessed error.&quot;)
   GoTo NormalExit

end sub		&apos;// end FixSCUnitAddrM 	9/21/20.
