&apos;// ImportRefUSA1.bas
&apos;//---------------------------------------------------------------
&apos;// ImportRefUSA1 -(old) Restructure ReferenceUSA imported sheet.
&apos;//		10/6/20.	wmk.	06:15
&apos;//---------------------------------------------------------------

public sub ImportRefUSA1()

&apos;//	Usage.	macro call or
&apos;//			call ImportRefUSA()
&apos;//
&apos;// Entry.	sheet selected with raw .csv imported data from ReferenceUSA
&apos;//			row index 0 contains headings
&apos;//
&apos;//	Exit.	sheet reorganized as per Notes below; resultant sheet is
&apos;//			in Admin-Import format
&apos;//Last Name, First Name, Full Name, House Number, Pre-directional, Street,
&apos;//Street Suffix, Post-directional, Apartment Number, Full Address, Phone1,
&apos;//Phone2, RefUSA Phone, truepeople, 411, whitepages, DoNotCall, RSO, Foreign
&apos;//
&apos;// Calls.	KillAutoRecalc, FreezeView, BoldHeadings, SetPhoneWidts
&apos;//			SetFullAddrWidth, SetColWidth, SelectActiveRows, SetSelection,
&apos;//			SortOnAddress, SetSearchWidths, ConcatAddressM, ConcatFirstLastM
&apos;//			InsertRUNewHdr
&apos;//
&apos;//	Modification history.
&apos;//	---------------------
&apos;//	8/28/20.	wmk.	original code
&apos;//	8/28/20.	wmk.	added calls to KillAutoRecalc and FreezeView
&apos;// 8/30/20.	wmk.	added call to SetPhoneWidths; added header
&apos;//						&quot;RefUSA&quot; at colum COL_RUPHONE, ROW 3
&apos;//	9/1/20.		wmk.	added code to place column headings for
&apos;//						DoNotCall, RSO
&apos;// 9/2/20.		wmk.	Found Name column changed to Full Name; header
&apos;//						information updated to match MultiMail.db
&apos;//						field mapping sheet for Admin Import
&apos;//	9/3/20		wmk.	Merge A1-A3 for &lt;Area-CommonName&gt;, merge E1-G1
&apos;//						for &lt;OwnerParcel&gt;, merge E2-G2 for &lt;OwnerName1&gt;,
&apos;//						merge E3-G3 for Streets-Address(s); SortOnAddress
&apos;//						ConcatAddressM, ConcatFirstLastM calls added; 
&apos;// 					columns M-P widths set to 1.34&quot;
&apos;//	9/6/20.		wmk.	add support for &quot;RecordDate&quot; field in SplitProps
&apos;//						note RUImportToBridge is where the actual support
&apos;//						code will be placed
&apos;//	9/8/20.		wmk.	add support for &quot;Foreign&quot; field in SplitProps;
&apos;//						note RUIMportToBridge and RUImportToEdit is where
&apos;//						actual support code will be placed; range for
&apos;//						SortAddress now includes column &quot;S&quot;
&apos;// 9/16/20.	wmk.	change to sort on both street and full address
&apos;//						so records come out in street order
&apos;//	9/24/20.	wmk.	mod to call InsertTerrHdr to set up header rows;
&apos;//						constants moved ahead of code; perform all column
&apos;//						insertion and deletion prior to InsertTerrHdr;
&apos;//						use SetColHeadings to set column headings; use
&apos;//						SetColWidths to set column widths; SortAgain
&apos;//						substituted for SortRUImport
&apos;//	9/25/20.	wmk.	old abandoned code removed
&apos;//	10/6/20.	wmk.	mod to call InsertRUNewHdr to set basic territory
&apos;//						information in header. User can now define terr
&apos;//						so basic territory data can be query extracted
&apos;//						to sheet TerrxxxHdr
&apos;//
&apos;//	Notes. Territories/RefUSATest.csv import into sheet..
&apos;// MultiMail/SplitProps table fields.
&apos;//		9/7/20.
&apos;//0|OwningParcel|TEXT|1||0
&apos;//1|UnitAddress|TEXT|1||0
&apos;//2|Resident1|TEXT|0||0
&apos;//3|Resident2|TEXT|0||0
&apos;//4|Phone1|TEXT|0||0
&apos;//5|Phone2|TEXT|0||0
&apos;//6|RefUSA-Phone|TEXT|0||0
&apos;//7|SubTerritory|TEXT|0||0
&apos;//8|CongTerrID|TEXT|0||0
&apos;//9|DoNotCall|INTEGER|0|0|0
&apos;//10|RSO|INTEGER|0|0|0
&apos;//11|Foreign|INTEGER|0|0|0
&apos;//12|RecordDate|REAL|0|0|0
&apos;//13|DeletePending|INTEGER|0|0|0
&apos;//
&apos;//	Method. the following steps will be executed
&apos;//		turn off &quot;Autorecalculate&quot; Data property
&apos;//		insert 4 rows starting at row index 0
&apos;//		[Set View/Freeze Rows and Columns at column 0, row 5]
&apos;//		insert column at index 2 &quot;Found Name&quot;
&apos;//		set column header at index 2 &quot;Found Name&quot;
&apos;//		delete 4 columns at column index 9 (city, state, zip, county)
&apos;//		add 3 columns at column index 9 (Full Address, Phone1, Phone2)
&apos;//		insert 3 columns at column index 13 (truepeople, 411, whitepages)
&apos;//		write column headings in 2 cells row indexes 3,4 column indexes 13-15
&apos;//			&quot;search/truepeople&quot;, &quot;search/411&quot;, &quot;search/whitepages&quot;

&apos;//	constants.
const COL_FULLNAME=2		&apos;// found name
const COL_NUMBER=3			&apos;// house number
const COL_PREDIR=4			&apos;// street pre-direction
const COL_STREET=5			&apos;// street name
const COL_SUFFIX=6			&apos;// street suffix (e.g. Ave)
const COL_POSTDIR=7			&apos;// street post direction
const COL_UNIT=8			&apos;// unit/apt #
const COL_FULLADDR=9		&apos;// full concatenated address
const YELLOW=16776960		&apos;// decimal value of YELLOW color
const MDYY=30				&apos;// number format M/D/YYY
const LJUST=1		&apos;// left-justify HoriJustify				&apos;// mod052020
const CJUST=2		&apos;// center HoriJustify						&apos;// mod052020
const RJUST=3		&apos;// right-justify HoriJustify				&apos;// mod052320
const COL_AREA=0
const ROW_AREA=0
const COL_CITY=8
const COL_ZIP = 10
const COL_ICITY=1
const ROW_ICITY=2
const COL_IZIP=2
const ROW_DATE=1
const COL_DATE=2
const ROW_BASE=5
const COL_UNITS=0		&apos;// &quot;Units shown:&quot;
const ROW_UNITS=1
const COL_FUNITS=1		&apos;// &quot;=COUNTA(A6:A298)&quot;
&apos;// new header locations 9/2/20
const COL_SUBTERR=0		&apos;// &quot;SubTerritory&quot;
const ROW_SUBTERR=3
const COL_TERRID=2		&apos;// &quot;CongTerrID&quot;
const ROW_TERRID=3
const COL_PROPID=3		&apos;// &quot;Property ID&quot;
const ROW_PROPID=0
const ROW_OWNER=1		&apos;// &quot;Owner&quot;
const ROW_STRADDR=2		&apos;// &quot;Streets/Addrs&quot;
&apos;// end new header locations 9/2/20
const COL_SEARCH=13		&apos;//	search/truepeople
const COL_RUPHONE=12	&apos;// RefUSA Phone column
const COL_DONOTCALL=16		&apos;// do not call
const COL_RSO=17			&apos;// registered sex offender
const COL_FOREIGN=18		&apos;// foreign language

&apos;// column widths
const ONE_INCH=2540	&apos;// one inch in .001cm
const A_WIDTH=1.0	&apos;// Last Name
const B_WIDTH=1.0	&apos;// First Name
const C_WIDTH=1.75	&apos;// Full Name
const D_WIDTH=1.04	&apos;// House Number
const E_WIDTH=1.01	&apos;// Pre-directional
const F_WIDTH=1.0	&apos;// Street
const G_WIDTH=0.9	&apos;// Street Suffix
const H_WIDTH=1.1	&apos;// Post-directional
const I_WIDTH=1.30	&apos;// Apartment Number
const J_WIDTH=1.75	&apos;// Full Address
const K_WIDTH=1.0	&apos;// Phone1
const L_WIDTH=1.0	&apos;// Phone2
const M_WIDTH=1.1	&apos;// RefUSA Phone
const N_WIDTH=0.9	&apos;// truepeople
const O_WIDTH=0.9	&apos;// 411
const P_WIDTH=0.9	&apos;// whitepages
const Q_WIDTH=0.9	&apos;// DoNotCall
const R_WIDTH=0.9	&apos;// RSO
const S_WIDTH=0.9	&apos;// Foreign

&apos;//	local variables.
Dim oDoc As Object
Dim oSheet As Object
Dim NewColumn As Object
dim oSel as Object
dim iSheetIx as integer
dim oRange as Object
dim lThisRow as long		&apos;// current row selected on sheet
dim oMrgRange	As Object	&apos;// merge range

&apos;// processing variables.
dim oCell As Object			&apos;// transient cell data
dim sColHdgs(18)	As String	&apos;// column heading strings
dim nColWidths(18)	As Integer	&apos;// column widths

	&apos;// code.
	ON ERROR GoTo ErrorHandler
	oDoc = ThisComponent
	oSel = oDoc.getCurrentSelection()
	oRange = oSel.RangeAddress
	iSheetIx = oRange.Sheet
	oSheet = oDoc.Sheets(iSheetIx)

	&apos;// insert and delete columns before doing anything else
	&apos;// insert column at index 2 &quot;Full Name&quot;
	oSheet.Columns.insertByIndex(COL_FULLNAME, 1)

	&apos;// remove 4 columns at Full Address column
	oSheet.Columns.removeByIndex(COL_FULLADDR, 4)
	
	&apos;// insert 3 columns at Full Address column
	&apos;// Headings &quot;Full Address&quot;, &quot;Phone1&quot;, &quot;Phone2&quot;
	oSheet.Columns.insertByIndex(COL_FULLADDR, 3)

	&apos;// now that columns in place, InsertTerrHdr
	InsertRUNewHdr(&quot;Admin-Import formatted sheet&quot;)
	
	&apos;// set column headings
	sColHdgs(0) = &quot;Last Name&quot;
	sColHdgs(1) = &quot;First Name&quot;
	sColHdgs(2) = &quot;Full Name&quot;
	sColHdgs(3) = &quot;House Number&quot;
	sColHdgs(4) = &quot;Pre-directional&quot;
	sColHdgs(5) = &quot;Street&quot;
	sColHdgs(6) = &quot;Street Suffix&quot;
	sColHdgs(7) = &quot;Post-directional&quot;
	sColHdgs(8) = &quot;Apartment Number&quot;
	sColHdgs(9) = &quot;Full Address&quot;
	sColHdgs(10) = &quot;Phone1&quot;
	sColHdgs(11) = &quot;Phone2&quot;
	sColHdgs(12) = &quot;RefUSA Phone&quot;
	sColHdgs(13) = &quot;truepeople&quot;
	sColHdgs(14) = &quot;411&quot;
	sColHdgs(15) = &quot;whitepages&quot;
	sColHdgs(16) = &quot;DoNotCall&quot;
	sColHdgs(17) = &quot;RSO&quot;
	sColHdgs(18)= &quot;Foreign&quot;
	SetColHeadings(sColHdgs)
	
	&apos;// set column widths
	nColWidths(0) = A_WIDTH * ONE_INCH
	nColWidths(1) = B_WIDTH * ONE_INCH
	nColWidths(2) = C_WIDTH * ONE_INCH
	nColWidths(3) = D_WIDTH * ONE_INCH
	nColWidths(4) = E_WIDTH * ONE_INCH
	nColWidths(5) = F_WIDTH * ONE_INCH
	nColWidths(6) = G_WIDTH * ONE_INCH
	nColWidths(7) = H_WIDTH * ONE_INCH
	nColWidths(8) = I_WIDTH * ONE_INCH
	nColWidths(9) = J_WIDTH * ONE_INCH
	nColWidths(10) = K_WIDTH * ONE_INCH
	nColWidths(11) = L_WIDTH * ONE_INCH
	nColWidths(12) = M_WIDTH * ONE_INCH
	nColWidths(13) = N_WIDTH * ONE_INCH
	nColWidths(14) = O_WIDTH * ONE_INCH
	nColWidths(15) = P_WIDTH * ONE_INCH
	nColWidths(16) = Q_WIDTH * ONE_INCH
	nColWidths(17) = R_WIDTH * ONE_INCH
	nColWidths(18) = S_WIDTH * ONE_INCH
	SetColWidths(nColWidths)
	
	&apos;// kill AutoCalculate
	KillAutoRecalc()

	&apos;// Freeze header so stays when scrolling
	FreezeView()
	
	&apos;// Bold and center headings
	BoldHeadings()

	&apos;// select all active rows.
	SelectActiveRows()
	
	&apos;// concatenate addresses
	ConcatAddressM()
	
	&apos;// concatenate names
	ConcatFirstLastM()

	&apos;// select through column S (at column A in last row)
&apos;// 
dim oDocument	As Object
dim oDispatcher	As Object
dim nColumns	As Integer
	oDocument   = ThisComponent.CurrentController.Frame
	oDispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	nColumns = ASC(&quot;S&quot;) - ASC(&quot;A&quot;)
dim args2(0) as new com.sun.star.beans.PropertyValue
	args2(0).Name = &quot;By&quot;
	args2(0).Value = nColumns
oDispatcher.executeDispatch(oDocument, &quot;.uno:GoRightSel&quot;, &quot;&quot;, 0, args2())
&apos;	SortRUImport()
	SortAgain()
		
	&apos;// restore user entry range selection.
	SetSelection(oRange)
		
	&apos;// finished
	msgbox(&quot;ImportRefUSA complete.&quot;)
	
NormalExit:
	exit sub
	
ErrorHandler:
	msgbox(&quot;ImportRefUSA - unprocessed error.&quot;)
	GoTo NormalExit
	
end sub		&apos;// end ImportRefUSA	10/6/20
