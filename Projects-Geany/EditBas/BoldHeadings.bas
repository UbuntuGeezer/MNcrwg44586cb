'// BoldHeadings.bas
'//---------------------------------------------------------------
'// BoldHeadings - Set RefUSA import sheet column headings bold.
'//		9/8/20.	wmk.	09:20
'//---------------------------------------------------------------

public sub BoldHeadings()

'//	Usage.	macro call or
'//			call BoldHeadings()
'//
'// Entry.	user in sheet with ReferenceUSA imported columns
'//
'//	Exit.	row index 4 all cells bold and centered, columns A-S
'//			row index 3, cells bold and centered, columns M-P
'// Calls.
'//
'//	Modification history.
'//	---------------------
'//	8/28/20.	wmk.	original code
'// 9/2/20.		wmk.	preserve and restore user cell selection on entry
'//						and exit; error handling added; columns A-R row 4
'//						columns M-P row 3
'//	9/6/20.		wmk.	add 1 more column right to Bold list (RecordDate)
'//	9/7/20.		wmk.	column G4 was being missed "RefUSA"
'//	9/8/20.		wmk.	H1 sheet format set bold
'//
'//	Notes. Code generated by Record Macro.

'//	constants.

'//	local variables.
dim document   as object
dim dispatcher as object
dim oDoc	As Object	'// ThisComponent
dim oSel	As Object	'// current cell selection on entry
dim oRange	As Object	'// RangeAddress selected

	'// code.
	ON ERROR GOTO ErrorHandler
	
	'// preserve user cell selection
	oDoc = ThisComponent
	oSel = oDoc.getCurrentSelection()
	oRange = oSel.RangeAddress

	'// get access to the document
	document   = ThisComponent.CurrentController.Frame
	dispatcher = createUnoService("com.sun.star.frame.DispatchHelper")

	'// uno:GoToCell $A$5
	dim args1(0) as new com.sun.star.beans.PropertyValue
	args1(0).Name = "ToPoint"
	args1(0).Value = "$A$5"

	dispatcher.executeDispatch(document, ".uno:GoToCell", "", 0, args1())

	'// A5 selected; now select through R5
rem ----------------------------------------------------------------------
	dim args3(0) as new com.sun.star.beans.PropertyValue
	args3(0).Name = "By"
	args3(0).Value = 18

	dispatcher.executeDispatch(document, ".uno:GoRightSel", "", 0, args3())

rem ----------------------------------------------------------------------
	dim args18(0) as new com.sun.star.beans.PropertyValue
	args18(0).Name = "Bold"
	args18(0).Value = true

	dispatcher.executeDispatch(document, ".uno:Bold", "", 0, args18())

rem ----------------------------------------------------------------------
	dim args19(0) as new com.sun.star.beans.PropertyValue
	args19(0).Name = "HorizontalAlignment"
	args19(0).Value = com.sun.star.table.CellHoriJustify.CENTER

	dispatcher.executeDispatch(document, ".uno:HorizontalAlignment", "", 0, args19())

'//	Set G4 (RefUSA) Bold
	args1(0).Name = "ToPoint"
	args1(0).Value = "$G$4"

	dispatcher.executeDispatch(document, ".uno:GoToCell", "", 0, args1())

	args18(0).Name = "Bold"
	args18(0).Value = true

	dispatcher.executeDispatch(document, ".uno:Bold", "", 0, args18())

'//	cell H1 - sheet format
	args1(0).Name = "ToPoint"
	args1(0).Value = "$H$1"

	dispatcher.executeDispatch(document, ".uno:GoToCell", "", 0, args1())

	args18(0).Name = "Bold"
	args18(0).Value = true

	dispatcher.executeDispatch(document, ".uno:Bold", "", 0, args18())

'// cells M4 - P4
	'// uno:GoToCell $M$4
'	dim args1(0) as new com.sun.star.beans.PropertyValue
	args1(0).Name = "ToPoint"
	args1(0).Value = "$M$4"

	dispatcher.executeDispatch(document, ".uno:GoToCell", "", 0, args1())

	'// now move right to select M4 - P4
'	dim args3(0) as new com.sun.star.beans.PropertyValue
	args3(0).Name = "By"
	args3(0).Value = 3

	dispatcher.executeDispatch(document, ".uno:GoRightSel", "", 0, args3())

rem ----------------------------------------------------------------------
'	dim args18(0) as new com.sun.star.beans.PropertyValue
	args18(0).Name = "Bold"
	args18(0).Value = true

	dispatcher.executeDispatch(document, ".uno:Bold", "", 0, args18())

rem ----------------------------------------------------------------------
'	dim args19(0) as new com.sun.star.beans.PropertyValue
	args19(0).Name = "HorizontalAlignment"
	args19(0).Value = com.sun.star.table.CellHoriJustify.CENTER

	dispatcher.executeDispatch(document, ".uno:HorizontalAlignment", "", 0, args19())

NormalExit:
	SetSelection(oRange)	'// restore user cell selection
	exit sub
	
ErrorHandler:
	msgbox("BoldHeadings - unprocessed error.")	

end sub		'// end BoldHeadings	9/8/20
