README-Territories - ArchivingBackups Territories project documentation.
	12/19/21.	wmk.

Modification History.
---------------------
6/28/21.	wmk.	original documentation.
7/1/21.		wmk.	filename change to README-Territories to accommodate
					other README files for other archives.
7/2/21.		wmk.	support shell documentation.
9/8/21.		wmk.	Code Segment and Data Segment subheadings added.
9/25/21.	wmk.	Business data segment documented.
11/15/21.	wmk.	document expanded; sections added: Territories Subsystem,
					Territories Code Segment, Territories Data Segment,
					minor text corrections.
12/19/21.	wmk.	IncDumpMainDBs, IncDumpRURaw and IncDumpSCRaw documented.

Document Sections.
------------------
Project Description - overall project description.
Territories Subsystem - segments of the subsystem for archiving purposes.
Territories Code Segment - description of code organization.
Territories Data Segmanet - description of data organization.
									
Project Description.
--------------------
The ArchivingBackups project is the central information point regarding
the file archiving and backup provisions. Currently there is no "make" 
file. The "Territories" portion of the project relates to backing up and
restoring the Territories subsystem.


Territories Subsystem.
----------------------
Territory management for the congregation is a complex system requiring
code and utilities that cross many boundaries. To bring the implementation
under one roof a complete Territories Subsystem has been developed. Currently
the subsystem is GNU/Linux based. However, it has been developed in such
a way as to faclitiate future porting to Windows based systems. The Territories
Subsystem consists of three major segments, code, data, and release.

The data segment is divided into two major sections. The residential section
is comprised of subdirectories RawData, TerrData and their
child directories. The business section is comprised of subdirectories
BRawData, BTerrData and their child directories. The download templates
and maps for both the residential and business sections are in subdirectory
Territory-PDFs.

The code segment spans multiple directories that also contain child
subdirectories. It contains all of the development source code, tools,
and development data for the Territory Subsystem. The principal subdirectories
are Basic, BRawData, BTerrData, Procs-Build, Procs-Dev, Projects-Geany,
Queries-SQL, RawData, ReleaseData, TerrData, UserInterface, and 'include'.

The release segment resides in the ReleaseData subdirectory and its child
subdirectories. It contains the release capsules that have been assembled
for distribution to those having territory oversight in the congregation.
Its child subdirectories are date-stamped folders named Release_mm-dd-yy
where 'mm', 'dd', and 'yy' are the release month, day and year.


Territories Release Segment.
----------------------------
A specialized set of tar dumps group TerrData publisher-ready territories
for upload to GoogleDrive/CongInfoExchange folders. The GoogleDrive
folders are named CongInfoExchange/Territories/Terrs 101-199, Terrs 201-299,
and Terrs 301 - 399. To facilitate information sharing of all the active
territories, they are stored in the CongInforExchange folders as
compressed tarballs grouped by territory number. The tarballs save space
on GoogleDrive, but still provide the data for multi-user access. The
specialized tar dumps are named GTerr101-199.tar.gz, GTerr201-200.tar.gz
GTerr301-300.tar.gz and GTerr4xx-9xx.tar.gz. These dumps will be resident
in the TerrData folder, available to upload to GoogleDrive. The rclone
command line utility is used to copy the tarballs to the appropriate
GoogleDrive folders. rclone 



Territories Data Segment.
-------------------------
The primary backup and restore of the data segment is via incremental
dumps of the data subdirectories using tar, or dumping to a flash drive
using the BU-Ignores shell. A secondary backup of the "released" data
is on the GoogleDrive for vnc.wmk3 in the CongInfoExhange/Territories folder.

tar backups of the data segment use the tar archiving utility to create
either full or incremental backups of RawData and TerrData. The incremental
dumps are stored on the Windows HDD until copied to a flash drive. The
advantage to this is that the incremental dumps are quite fast, and do not
require the data segment sudirectory structure. Incremental dumps are
most useful if a data file is corrupted by the development code and needs
to be quickly reloaded. The intent is that incremental dumps can be done
daily or more frequently, and used from the Windows HDD for quick file
recovery. If desired, then incrementals could be transfered to a flash
drive at the end of the week, or any time in the interim. These incremental
dumps are not fully compressed, so may not fit on flash drives with
limited capacity.

tar full dumps of the RawData and TerrData will typically be done to a
flash drive. These are the primary source of data recovery in the event
of a system or Windows HDD failure. Unlike the incremental dumps, the
full dumps will be in a compressed format to a file with the suffix
".tar.gz". At a minimum, full dumps should be performed weekly, and
whenever there has been a major download from SCPA or RefUSA.

Territories Code Segment.
-------------------------
The primary backup and restore of the code segment is via 'git' push/pull
operations to/from github.com.  Primary residence of the Territories git
project is on the Windows HDD in the GitHub subdirectory. A clone (devel)
for development purposes resides on the ~/Territories subdirectory.

When code changes are committed in the (devel) clone, they move its *master
branch ahead of the GitHub project. To ensure that changes would not be
lost in the event of a Windows HDD failure, two steps are necessary;
a "pull" operation from the GitHub git Territories project, followed by
a "push" operation from the GitHub git Territories repository upstream
to the github.com Territories repository.

A second method of backing up the Territories code segment is to use
PJDUMP to clone the GitHub Territories repository to a flash drive. With
either method of backup, it must be kept in mind that the data segment
of the Territories project is backed up separately.


The BU-Ignores shell copies to a flash drive using the -r and -u parameters
of the cp utility to process each entry in the .gitignore file for the
Territories repository. This way any files or file patterns ignored by
git maintaining the code segment will be backed up to the repository
residing on the flash drive.

See also: README, README-Projects, README-System.


Supporting Code and Utilities.
------------------------------
The Territories portion is supported by several shell files that perform
backup and restore operations specific to Territories. The shell files
are as follows:

TARBALL - general purpose tar/create shell for specified subfolders of
  directory user currently in as ($)PWD; creates compressed tar.gz.

IncDumpMainDBs - incremental dump of DB-Dev databases VeniceNTerritory,
  PolyTerri.db, MultiMail.db and supporting databases.
  
IncDumpTerrData - incremental dump of TerrData directories which contain
  publisher-ready territory spreadsheets, PDFs, and associated work files.

IncDumpSCRaw - incremental dump of RawData directories which contain
  downloads from SCPA.
IncDumpRURaw - incremental dump of RawData directories which contain
  downloads from RefUSA.
IncDumpRawData - incremental dump of RawData directories which contain
  downloads from SCPA and RefUSA.
  
BU-Ignores - dump of data segement files ignored by GitHub from list in
  .gitignore; uncompressed to flash drive ./git-Projects/Territories.

TerrFullData - full tar compressed dump of data segment files from listed
  data segement subdirectories to flash; excludes SCPA full download files.

TerrGoogle101 - tar compressed dump of publisher territory files from
  TerrData folders Terr101 - Terr199.

TerrGoogle201 - tar compressed dump of publisher territory files from
  TerrData folders Terr201 - Terr299.

TerrGoogle301 - tar compressed dump of publisher territory files from
  TerrData folders Terr301 - Terr399.

UploadGoogleTerrs - upload the tar compressed publisher territory files
  from TerrData to the CongInfoExchange folders on GoogleDrive.

Detailed descriptions for these shells follows.


TARBALL Shell [ShellFiles].
--------------
The TARBALL shell is a bash proc file to simplify archiving of a Territories
subfolder set. It takes 2 command line parameters, the folder base for
gathering archive files, and the tar target file path. It should be run
from the folder base path to be archived. To simplify matters for tar,
the target file is best located not on the folder base (typically, one
could use ../<targetfile> to place the tar file in the parent directory
of the area to be archived).


IncDumpRawData Shell [ArchivingBackups].
--------------------
The IncDumpRawData shell performs incremental dumps of the
Territories/RawData folder set. This folder set contains the current
publisher territory spreadsheets and .pdf files and their associated
Working-Files used in the spreadsheet build process. There are no
command line parameters for the IncDumpRawData shell.

When the IncDumpRawData shell is invoked, it checks for the existence
of the ./log/TerrData.snar-0 file. If this file does not exist, a level-0
incremental tar is run which will dump the entire set of files and
folders included in ./RawData as a base for future incremental dumps.
The level-0 "listed-incremental" file is named RawData.snar-0.

When the ./log/TerrData.snar-0 file exists at IncDumpRawData starup, a level-1
incremental tar is run which will only dump the files [and new folders]
that have changed since the level-0 tar dump.

Each run of IncDumpRawData will produce a new .tar file in the parent
directory ../Territories, or on the root folder of a specified drive.
The level-0 .tar file is named RawData.0.tar.

	./IncDumpRawData.sh [drive-spec e.g $U_DISK/Lexar]

All subsequent level-1 .tar files are named RawData.1.tar, etc. Note
that none of these .tar files are compressed beyond the basic file 
compression that tar utilizes by default. Further compression would
prevent incremental dumping.

Eventually this shell may be supported in the ~/sysprocs folder for use
as a daily timed event to perform daily incremental backups to a removable
media, such as a flash drive.


IncDumpTerrData Shell. [ArchivingBackups]
----------------------
The IncDumpTerrData shell performs incremental dumps of the
Territories/TerrData folder set. This folder set contains the current
publisher territory spreadsheets and .pdf files and their associated
Working-Files used in the spreadsheet build process. There are no
command line parameters for the IncDumpTerrData shell.

When the IncDumpTerrData shell is invoked, it checks for the existence
of the ./log/TerrData.snar-0 file. If this file does not exist, a level-0
incremental tar is run which will dump the entire set of files and
folders included in ./TerrData as a base for future incremental dumps.
The level-0 "listed-incremental" file is named TerrData.snar-0.

When the ./log/TerrData.snar-0 exists at IncDumpTerrData starup, a level-1
incremental tar is run which will only dump the files [and new folders]
that have changed since the level-0 tar dump.

Each run of IncDumpTerrData will produce a new .tar file in the parent
directory ../Territories. The level-0 .tar file is named TerrData.0.tar.
All subsequent level-1 .tar files are named TerrData.1.tar, etc. Note
that none of these .tar files are compressed beyond the basic file 
compression that tar utilizes by default. Further compression would
prevent incremental dumping.

Eventually this shell may be supported in the ~/sysprocs folder for use
as a daily timed event to perform daily incremental backups to a removable
media, such as a flash drive.


BU-Ignores.	[Territories]
-----------
BU-Ignores dumps all files and file patterns present in .gitignore for
the Territories project. The target for the dump is a flash drive with
the folder git-Projects/Territories. The subdirectory structures are
retained from the Territories project. The dump is performed so that it
mimics an "incremental" dump using the -r and -u parameters of the cp
utility to only copy "updated" files.


TerrGoogle101. [ArchivingBackups]
--------------
TerrGoogle101 generates a tar compressed dump of publisher territory
files from TerrData folders Terr101 - Terr199. These territories are
regular house-to-house territories for which all addresses have been
downloaded from SCPA and RefUSA data. They will eventually be uploaded
to GoogleDrive folder CongInfoExchange/Territories/'Terrs 101 - 199'.

TerrGoogle201. [ArchivingBackups]
--------------
TerrGoogle201 generates a tar compressed dump of publisher territory
files from TerrData folders Terr201 - Terr299. These territories are
regular house-to-house territories for which all addresses have been
downloaded from SCPA and RefUSA data. They will eventually be uploaded
to GoogleDrive folder CongInfoExchange/Territories/'Terrs 201 - 299'.

TerrGoogle301. [ArchivingBackups]
--------------
TerrGoogle301 generates a tar compressed dump of publisher territory
files from TerrData folders Terr301 - Terr399. These territories are
regular house-to-house territories for which all addresses have been
downloaded from SCPA and RefUSA data. They will eventually be uploaded
to GoogleDrive folder CongInfoExchange/Territories/'Terrs 301 - 399'.

TerrGoogle4xx. [ArchivingBackups]
--------------
TerrGoogle4xx generates a tar compressed dump of publisher territory
files from TerrData folders Terr4xx - Terr9xx. These territories are
regular house-to-house territories for which all addresses have been
downloaded from SCPA and RefUSA data. They will eventually be uploaded
to GoogleDrive folder CongInfoExchange/Territories/'Terrs 4xx - 9xx'.

UploadGoogleTerrs. [ArchivingBackups]
------------------
UploadGoogeTerrs uploads the tar compressed publisher territory files
from TerrData to the CongInfoExchange folders on GoogleDrive. The files
uploaded are GTerr101-199.tar.gz, GTerr201-299.tar.ga, GTerr301-399.tar.gz,
and GTerr4xx-5xx.tar.gz. Each file will be uploaded to its respective
folder under CongInfoExchange/Territories. Publisher territories may
then be extracted from this repository as needed.


tar Files.
----------
The following are the full paths to the archiving and backups currently
tracked by this documentation. Note that any .tar or .tar.gz files that
reside in the paths RawData or TerrData will be ignored by git when
tracking projects. If .tar or .tar.gz files are placed on any paths
upstream or parallel to these paths, they may have to be explicitly
listed in the .gitignore file for Territories to avoid the overhead of
tracking by git.

folderbase/Territories/RawData/SCPA/SCPA-Downloads/Previous/SCPAPrevious.tar.gz
  ~/SCPA-Downloads/Previous folder files starting with SCPA*; this includes
  .csv, .db and other files whose names begin with "SCPA". Most of these
  files are residual from previous downloads and their associated files.
  This file was generated by running tar from its parent directory, then
  copying the resultant .tar.gz file back into the ./Previous folder.

folderbase/Territories/RawData/SCPA/SCPA-Downloads/Previous/SCPAOld.tar.gz
  ~/SCPA-Downloads/Previous/Old folder files (all). Member names all start
  with ./Old to facilitate reloading into the /Previous/Old directory from
  the .tar.gz archive. These are residual downloads and associated files
  from earlier development efforts.

folderbase/Territories/RawData/SCPA/SCPA-Downloads/Special.tar.gz
  ~/SCPA-Downloads/Special folder files (all). Member names all start
  with ./Special to facilitate reloading into the /SCPA-Downloads folder
  from the .tar.gz archive. These are special SCPA downloads (usually
  streets which may span territories) that are used by some of the 
  FixyyySC.sh processes for handling complex territories that are
  not easily downloaded using map polygons.

folderbase/Territories/RawData/Daves-Downloads.tar.gz
  ~/RawData/Daves-Downloads folder (removed); initial SCPA download files
  from Dave Lowrie 7/2020. These files were the initial data that has 
  since been massaged and pared down into the NVenAll table in the
  VeniceNTerritories.db... History in the making.

folderbase/Territories/RawData/RefUSA/RefUSA-Downloads/Special/RUPrevious.tar.gz
  ~/Special/Previous folder; previous special .csv downloads.

folderbase/Territories/RawData/RefUSA/RefUSA-Downloads/RUSpecial.tar.gz
  ~/Special folder; RefUSA special downloads to compensate for Mapxxx_RU.csv
  deficiencies (typically street/house number mismatches between RU polygon
  data and actual territory properties.

folderbase/Territories/RawData/RefUSA/RefUSA-Downloads/RUAllTerr.tar.gz
  All RefUSA-Downloads/Terrxxx subdirectories of Mapxxx_RU.csv downloads,
  Terrxxx_RU.db databases and all associated files of raw download data.

folderbase/Territories/RawData/SCPA/SCPA-Downloads/SCAllTerr.tar.gz
  All SCPA-Downloads/Terrxxx subdirectories of Mapxxx_SC.csv downloads,
  Terrxxx_SC.db databases and all associated files of raw download data.

folderbase/Territories/TerrData/TDAllTerr.tar.gz
  All TerrData/Terrxxx subdirectories (including ./WorkingFiles) of
  Terrxxx_PubTerr.ods, .xlsx, Terrxxx_SuperTerr.ods, .xlsx and
  Terrxxx_PubTerr.pdf territories for distribution along with intermediate
  files used to build.

folderbase/Territories/TerrData/TDPubTerrs.tar.gz
  All TerrData/Terrxxx publisher territory files by territory; 
  Terrxxx_PubTerr.ods,.xlsx,Terrxxx_SuperTerr.ods,.xlsx, Terrxxx_PubTerr.pdf
  This tar.gz may be uploaded to GoogleDrive as a repository of territories
  for congregation access.


