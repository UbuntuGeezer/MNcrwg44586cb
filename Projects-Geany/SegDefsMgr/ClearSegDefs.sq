echo "-- * ClearSegDefs.psq/sql - Clear TerriDData.SegDefs table of territory xxx entries."  > SQLTemp.sql
echo "-- * 3/8/23.	wmk."  >> SQLTemp.sql
echo "-- *"  >> SQLTemp.sql
echo "-- * Entry. Jumpto.sql contains SQL code to issue EndMessage table messages."  >> SQLTemp.sql
echo "-- *	    /DB-Dev/TerrIDData.db.DefSegs table contains definitions."  >> SQLTemp.sql
echo "-- *"  >> SQLTemp.sql
echo "-- * Exit. table TerriDData.SegDefs entries removed tor territory."  >> SQLTemp.sql
echo "-- *	   table TerrIDData.Territory.Segmented = 0 for territory."  >> SQLTemp.sql
echo "-- *"  >> SQLTemp.sql
echo "-- * Modification History."  >> SQLTemp.sql
echo "-- * ---------------------"  >> SQLTemp.sql
echo "-- * 2/15/23.	wmk.	original code; adpated from LoadSegDefs."  >> SQLTemp.sql
echo "-- * 3/5/23.	wmk.	documentation clarified."  >> SQLTemp.sql
echo "-- * 3/8/23.	wmk.	Note text corrected with 808."  >> SQLTemp.sql
echo "-- *"  >> SQLTemp.sql
echo "-- * Notes. segdefs.sqldef contains a set of WHERE clauses with the following pattern:"  >> SQLTemp.sql
echo "-- *	WHERE UnitAddress LIKE '%street1%'"  >> SQLTemp.sql
echo "-- *       OR UnitAddress LIKE '%street2%'"  >> SQLTemp.sql
echo "-- *	   OR (UnitAddress LIKE '%street3%'"  >> SQLTemp.sql
echo "-- *	     AND CAST(SUBSTR(UnitAddress,1,INSTR(UnitAddress,' ')) AS INT) >= n1"  >> SQLTemp.sql
echo "-- *	     AND CAST(SUBSTR(UnitAddress,1,INSTR(UnitAddress,' ')) AS INT) >= n2"  >> SQLTemp.sql
echo "-- *         AND CAST(SUBSTR(UnitAddress,1,INSTR(UnitAddress,' ')) AS INT)%2 = 1)"  >> SQLTemp.sql
echo "-- *"  >> SQLTemp.sql
echo "-- * This query only clears the segdefs from the TerrIDData.SegDefs table. It"  >> SQLTemp.sql
echo "-- * leaves the segdefs.csv file in the territory data alone."  >> SQLTemp.sql
echo "-- *;"  >> SQLTemp.sql
echo ".open '$pathbase/DB-Dev/TerrIDData.db'"  >> SQLTemp.sql
echo ""  >> SQLTemp.sql
echo "DROP TABLE IF EXISTS EndMessage;"  >> SQLTemp.sql
echo "CREATE TABLE EndMessage("  >> SQLTemp.sql
echo " msg TEXT)"  >> SQLTemp.sql
echo " ;"  >> SQLTemp.sql
echo ""  >> SQLTemp.sql
echo "INSERT INTO EndMessage"  >> SQLTemp.sql
echo "VALUES( \" ClearSegDefs initiated..\");"  >> SQLTemp.sql
echo ""  >> SQLTemp.sql
echo "INSERT INTO EndMessage"  >> SQLTemp.sql
echo "VALUES(\"  Note. ClearSegDefs does not clear Terr808/segdefs.csv\");"  >> SQLTemp.sql
echo ""  >> SQLTemp.sql
echo "DELETE FROM SegDefs"  >> SQLTemp.sql
echo "WHERE TerrID IS '808';"  >> SQLTemp.sql
echo ""  >> SQLTemp.sql
echo "UPDATE Territory"  >> SQLTemp.sql
echo "SET Segmented = 0"  >> SQLTemp.sql
echo "WHERE TerrID IS '808';"  >> SQLTemp.sql
echo ""  >> SQLTemp.sql
echo "DROP TABLE IF EXISTS Counts808;"  >> SQLTemp.sql
echo "CREATE TABLE Counts808("  >> SQLTemp.sql
echo " Count INTEGER )"  >> SQLTemp.sql
echo ";"  >> SQLTemp.sql
echo "INSERT INTO Counts808(Count)"  >> SQLTemp.sql
echo "SELECT count() TerriD FROM SegDefs"  >> SQLTemp.sql
echo "WHERE TerrID IS '808';"  >> SQLTemp.sql
echo ""  >> SQLTemp.sql
echo "WITH a AS (SELECT Count FROM Counts808)"  >> SQLTemp.sql
echo "INSERT INTO EndMessage"  >> SQLTemp.sql
echo "SELECT CASE WHEN a.Count > 0"  >> SQLTemp.sql
echo "THEN \"  **ClearSegDefs FAILED - SegDefs for 808 not cleared.**\""  >> SQLTemp.sql
echo "ELSE \"  ClearSegDefs complete.\""  >> SQLTemp.sql
echo "END FROM a;"  >> SQLTemp.sql
echo ""  >> SQLTemp.sql
echo ".quit"  >> SQLTemp.sql
echo "-- ** END ClearSegDefs.sql"  >> SQLTemp.sql
