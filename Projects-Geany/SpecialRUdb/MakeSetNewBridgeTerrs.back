#MakeSpecialRUdb.tmp - SpecialRUdb make template.
# 9/22/22.    wmk.   (automated) *codebase env var support.
# 9/22/22.    wmk.   (automated) CB *codebase env var support.
#	4/24/22.	wmk.
#
# Entry. pathRUdefs.inc - include file RU path definitions
#		pathRUdefs.inc derived from generic ~/include/pathRUdefs.i
#			via Build dependency
#		(vpath .db)Terryyy_RU.db - territory RU current download
#		(vpath .csv) Mapyyy_RU.csv - territory RU .csv download raw data
#		var postpath = postprocessing path to Terryyy/FixyyyRU.sh
 # var bashpath(codebase)
#
# Modification History.
# ---------------------
# 4/24/22.	wmk.	code generalized for FL/SARA/86777;*pathbase*, 
#			 *congterr*, *conglib* env vars introduced.
# Legacy mods.
# 6/7/21.	wmk.	original makefile; adapted from MakeUpdateRUDwnld.tmp
# 7/2/21.	wmk.	multihost code improvements.
# 7/18/21.	wmk.	dead code removed; check for functionality with Special
#			 database BirdBayCir.db; name change to MakeSpecialRUdb;
#			 FixyyyRU prerequisites and build eliminate.
# 7/19/21.	wmk.	primary target changed to SetNewBridgeTerrs.sh; projpath
#			 var added.
# 12/28/21.	wmk.	bug fix $ USR corrected to USER;<filename> edited out in
#			 target.sh; chmod 700 added to recipe to allow .sh to execute.
#
# Notes. This makefile uses SetNewBridgeTerrs.s and SetNewBridgeTerrs.sq
# to create SetNewBridgeTerrs.sql. SetNewBridgeTerrs.sql is the shell
# SQL statements that will be used to make SetNewBridgeTerrs.sh by
# adding hdrAnySQL_1 before and hdrAnySQL_2 afterwards.
# The SetNewBridgeTerrs.sh is the follow-up shell after a special territory
# .db is created to set the CongTerrID fields in the Spec_RUBridge table
# from the current data in PolyTerri.db and MultiMail.db.

#vpath %.db /media/ubuntu/Windows/Users/Bill/Territories/RawData/RefUSA/RefUSA-Downloads/Terryyy
#vpath %.csv /media/ubuntu/Windows/Users/Bill/Territories/RawData/RefUSA/RefUSA-Downloads/Terryyy
 #bashpath = "/media/ubuntu/Windows/Users/Bill/Territories/Procs-Dev/"(codebase)
#postpath = "/media/ubuntu/Windows/Users/Bill/Territories/RawData/RefUSA/RefUSA-Downloads/Terryyy/"

#<dbname>.db		: <dbname>.csv
	#sql to take <dbname>.csv and create a Mapxxx_RU.db type database
	# with RURaw and RUPoly tables from which to extract records into
	# Terrxxx_RU.db RURaw and RUPoly tables. This will be useful
	# for convoluted territories like 289 in Gondola Park where it is
	# nearly impossible to get RefUSA to extract the proper records
	# for the UnitAddress set in the territory.


.ONESHELL : ;
.NOTPARALLEL : ;
.PHONY : WarnUser NeverMake ;

ifndef folderbase
 ifeq ($(USER),ubuntu)
  folderbase = "/media/ubuntu/Windows/Users/Bill"
 else
  folderbase = $(HOME)
 endif
endif

ifndef codebase
 codebase = $(folderbase)/GitHub/TerritoriesCB
endif

ifndef pathbase
 pathbase = $(pathbase)
endif

incroot = $(pathbase)/include/
 procpath = $(codebase)/Procs-Dev/
specpath = $(pathbase)/RawData/RefUSA/RefUSA-Downloads/Special/
 projpath = $(codebase)/Projects-Geany/SpecialRUdb/
vpath %.i $(pathbase)/include

include pathRUdefs.inc


# primary target ($)projpath/SetNewBridge.sh
#================================================================
$(projpath)SetNewBridgeTerrs.sh : (projpath)SetNewBridgeTerrs.sql \
 $(projpath)SetNewBridgeTerrs.sq (projpath)SetNewBridgeTerrs.s
	cat $(procpath)hdrAnySQL_1.sh $(projpath)SetNewBridgeTerrs.sql \
	  $(procpath)hdrAnySQL_2.sh > $@
	sed -i 's?<filename>?SetNewBridgeTerrs?g' $@
	chmod +x $@

$(projpath)SetNewBridgeTerrs.sql : $(projpath)SetNewBridgeTerrs.sq \
 $(projpath)SetNewBridgeTerrs.s
	# convert .sq file to .sql file of echo's.
	cd $(projpath)
	echo 's?\"?\\\\"?g' > sedatives.txt
	echo "s?^?echo \"?g" >> sedatives.txt
	echo "s?\$$?\" >> SQLTemp.sql?g" >> sedatives.txt
	echo "1s?>>?>?g" >> sedatives.txt
	sed  -f sedatives.txt SetNewBridgeTerrs.sq > $@


$(projpath)SetNewBridgeTerrs.sq : $(projpath)SetNewBridgeTerrs.s
	$(error ** need to run DoSed to update SetNewBridgeTerrs.sq **)

$(projpath)SetNewBridgeTerrs.s :;
	$(error ** missing SetNewBridgeTerrs.s - required for SetNewBridgeTerrs.sq **)
	
#================================================================
